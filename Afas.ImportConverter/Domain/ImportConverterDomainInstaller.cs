using Afas.ImportConverter.Domain.ImportFormatting;
using Afas.ImportConverter.Domain.ImportFormatting.DataFormatters;
using Afas.ImportConverter.Domain.ImportFormatting.DataFormatters.Implementation;
using Afas.ImportConverter.Domain.ImportFormatting.Generators;
using Afas.ImportConverter.Domain.ImportFormatting.Generators.Implementation;
using Afas.ImportConverter.Domain.POCO;
using Afc.Core.Application;
using Afc.Framework.Application;
using Castle.MicroKernel.Registration;
using Castle.MicroKernel.SubSystems.Configuration;
using Castle.Windsor;

namespace Afas.ImportConverter.Domain
{

    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public class ImportConverterDomainInstaller : IWindsorInstaller
    {
        public void Install(IWindsorContainer container, IConfigurationStore store)
        {

            container.Register(
                Component.For<IManagedValueGenerator>()
                .ImplementedBy<ManagedValueGenerator>());
            container.Register(
                Component.For<IManagedDataFormatter>()
                .ImplementedBy<ManagedDataFormatter>());


            container.Register(
                Component.For<IValueGenerator>()
                .ImplementedBy<RandomGuidValueGenerator>()
                .Named(ValueGeneratorTypes.RandomGuid.ToString()));
            container.Register(
                Component.For<IValueGenerator>()
                .ImplementedBy<RandomNumberValueGenerator>()
                .Named(ValueGeneratorTypes.RandomNumber.ToString()));
            container.Register(
                Component.For<IValueGenerator>()
                .ImplementedBy<UniqueDateValueGenerator>()
                .Named(ValueGeneratorTypes.UniqueDate.ToString()));
            container.Register(
                Component.For<IValueGenerator>()
                .ImplementedBy<UniqueNumberValueGenerator>()
                .Named(ValueGeneratorTypes.UniqueNumber.ToString()));


            container.Register(
                Component.For<IDataFormatter>()
                .ImplementedBy<DateDataFormatter>()
                .Named(DataFormatterTypes.DateFormatter.ToString()));
            container.Register(
                Component.For<IDataFormatter>()
                .ImplementedBy<DecimalDataFormatter>()
                .Named(DataFormatterTypes.DecimalFormatter.ToString()));
            container.Register(
                Component.For<IDataFormatter>()
                .ImplementedBy<IntegerDataFormatter>()
                .Named(DataFormatterTypes.IntegerFormatter.ToString()));
            container.Register(
                Component.For<IDataFormatter>()
                .ImplementedBy<BooleanDataFormatter>()
                .Named(DataFormatterTypes.BooleanFormatter.ToString()));


            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<AddNewColumnFormatCommand>()
                .Named(ImportFormatCommandTypes.AddNewColumn.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<AutoGenerateDefaultValuesFormatCommand>()
                .Named(ImportFormatCommandTypes.AutoGenerateDefaultValues.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DefaultColumnSingleFormatCommand>()
                .Named(ImportFormatCommandTypes.DefaultColumnIfSingleChoice.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DefaultColumnValueFormatCommand>()
                .Named(ImportFormatCommandTypes.DefaultColumnIfBlank.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DeleteByValueFormatCommand>()
                .Named(ImportFormatCommandTypes.DeleteByValue.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DeleteColumnFormatCommand>()
                .Named(ImportFormatCommandTypes.DeleteColumn.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DeleteColumnIfBlankFormatCommand>()
                .Named(ImportFormatCommandTypes.DeleteColumnIfBlank.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<DeleteRowsFormatCommand>()
                .Named(ImportFormatCommandTypes.DeleteRows.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<FormatColumnValuesFormatCommand>()
                .Named(ImportFormatCommandTypes.FormatColumn.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<MergeColumnsFormatCommand>()
                .Named(ImportFormatCommandTypes.MergeColumns.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<RenameColumnFormatCommand>()
                .Named(ImportFormatCommandTypes.RenameColumn.ToString()));
            container.Register(
                 Component.For<IImportFormatCommand>()
                 .ImplementedBy<ReplaceByValueFormatCommand>()
                 .Named(ImportFormatCommandTypes.ReplaceByValue.ToString()));
            container.Register(
                Component.For<IImportFormatCommand>()
                .ImplementedBy<UnifyColumnsFormatCommand>()
                .Named(ImportFormatCommandTypes.UnifyColumnNames.ToString()));

            
        }
    }
}